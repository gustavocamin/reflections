What happens when you initialize a repository? Why do you need to do it?
	-I need a repository to keep the logs and all the versions of the files. I need it to use git.

How is the staging area different from the working directory and the repository? What value do you think it offers?
	-The staging area is an area pre-repository in the working directory. you add there all the files that you want to include in the next commit. Its valuable because this way you can chose what goes in the commit now and latter, dividing by logical functions, etc.

How can you use the staging area to make sure you have one commit per logical change?
	-You can use diff --stage to compare the working directory to the staging area, if it shows differences about one file, you dont have it on your staging area. Make sure you have all the files you want to commit and shows no difference, and its ready.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	-When you want to increment a different new version, or a feature, but still want to keep the master untouched. You create a branch and start changing it there, keeping the master unchanged.

How do the diagrams help you visualize the branch structure?
	-With diagrams you can see the structure of the master branch and from each one of the other, seeing what is being developed differently on each one, controlling to not have a free commit, etc. You have a better vision of everything.

What is the result of mergin two branches together? Why do we represent in the diagram the way we do?
	-When we merge two branches, the commits of the second branch are included in the master branch ( only those who doesnt have differences in both merges) and the functionalitty is implemented. We represent that way in the diagram so its easier to know which commits are included and the timeline they were made.